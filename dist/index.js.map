{
  "version": 3,
  "sources": ["../lib/polyfill.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for environments which do not support HTTP/2.\n*\n* @private\n* @throws {Error} environment lacks support for HTTP/2\n*/\nfunction polyfill() {\n\tthrow new Error( 'invalid operation. Environment lacks support for HTTP/2. Ensure that you are running on a Node.js version with supports HTTP/2 and has been built to include support for the Node.js `crypto` module.' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = polyfill;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an HTTP/2 server.\n*\n* @module @stdlib/net-http2-secure-server\n*\n* @example\n* var resolve = require( 'path' ).resolve;\n* var readFileSync = require( '@stdlib/fs-read-file' ).sync;\n* var http2ServerFactory = require( '@stdlib/net-http2-secure-server' );\n*\n* var opts = {\n*     'port': 7331,\n*     'address': 'localhost',\n*     'cert': readFileSync( resolve( __dirname, '..', 'examples', 'localhost-cert.pem' ) ),\n*     'key': readFileSync( resolve( __dirname, '..', 'examples', 'localhost-privkey.pem' ) )\n* };\n*\n* function done( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( 'Success!' );\n*     server.close();\n* }\n*\n* var http2Server = http2ServerFactory( opts );\n* http2Server( done );\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils-try-require' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar main;\nvar tmp = tryRequire( join( __dirname, './main.js' ) );\nif ( isError( tmp ) ) {\n\tmain = polyfill;\n} else {\n\tmain = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cA4BA,SAASC,GAAW,CACnB,MAAM,IAAI,MAAO,uMAAwM,CAC1N,CAKAD,EAAO,QAAUC,ICgBjB,IAAIC,EAAO,QAAS,MAAO,EAAE,KACzBC,EAAa,QAAS,2BAA4B,EAClDC,EAAU,QAAS,yBAA0B,EAC7CC,EAAW,IAKXC,EACAC,EAAMJ,EAAYD,EAAM,UAAW,WAAY,CAAE,EAChDE,EAASG,CAAI,EACjBD,EAAOD,EAEPC,EAAOC,EAMR,OAAO,QAAUD",
  "names": ["require_polyfill", "__commonJSMin", "exports", "module", "polyfill", "join", "tryRequire", "isError", "polyfill", "main", "tmp"]
}
